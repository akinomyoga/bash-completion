# cd(1) completion                                         -*- shell-script -*-

# This meta-cd function observes the CDPATH variable, so that `cd`
# additionally completes on directories under those specified in CDPATH.
_comp_cmd_cd()
{
    local cur prev words cword comp_args
    _comp_initialize -- "$@" || return

    if [[ $cur == -* ]]; then
        _comp_compgen_help -c help "$1"
        compopt +o nospace
        return
    fi

    local i j k

    compopt -o filenames

    # Skip CDPATH completions if no CDPATH or if parameter starts with /, ./ or
    # ../
    if [[ ${CDPATH-} && $cur != ?(.)?(.)/* ]]; then
        local mark_dirs="" mark_symdirs=""
        _comp_readline_variable_on mark-directories && mark_dirs=set
        _comp_readline_variable_on mark-symlinked-directories && mark_symdirs=set

        # we have a CDPATH, so loop on its contents
        local paths dirs
        _comp_split -F : paths "$CDPATH"
        for i in "${paths[@]}"; do
            # create an array of matched subdirs
            k=${#COMPREPLY[@]}
            _comp_compgen -v dirs -c "$i/$cur" -- -d
            for j in "${dirs[@]}"; do
                if [[ ($mark_symdirs && -L $j || $mark_dirs && ! -L $j) && ! -d ${j#"$i/"} ]]; then
                    j+="/"
                fi
                COMPREPLY[k++]=${j#"$i/"}
            done
        done
        if ((${#COMPREPLY[@]} == 1)); then
            if [[ ${COMPREPLY[0]} == "$cur" ]]; then
                COMPREPLY[0]+=/
            fi
        fi
    fi

    _comp_compgen -a filedir -d

    local vars
    if shopt -q cdable_vars && [[ $cur =~ ^([_a-zA-Z][_a-zA-Z0-9]*)?$ ]] && _comp_compgen -v vars -- -v; then
        k=${#COMPREPLY[@]}
        for i in "${vars[@]}"; do
            [[ -d ${!i} ]] && COMPREPLY[k++]=$i
        done
    fi
}
complete -F _comp_cmd_cd -o nospace cd pushd
